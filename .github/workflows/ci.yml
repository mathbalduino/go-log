name: CI

on:
  push:
    branches: [ main ]

jobs:
  CI:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
      with:
        fetch-depth: 0
    - uses: actions/setup-go@v2
      with:
        go-version: 1.17

    - name: gofmt
      uses: Jerome1337/gofmt-action@v1.0.4
      with:
        gofmt-path: './'
        gofmt-flags: '-l -d -s -e'

    - name: go vet
      run: go vet ./...

    - name: go test
      run: go test -v -coverprofile=coverage.txt -covermode=atomic ./...

    - name: Upload coverage
      uses: codecov/codecov-action@v2
      with:
        files: ./coverage.txt
        fail_ci_if_error: true
        verbose: true

    - name: Read new version
      id: read_code_step
      run: echo "::set-output name=code_version::$(.github/getCodeVersion.sh)"

    - name: Create new version Tag
      uses: actions/github-script@v5
      env:
        TAG_NAME: ${{steps.read_code_step.outputs.code_version}}
      with:
        script: |
          github.rest.git.createRef({
            owner: context.repo.owner,
            repo: context.repo.repo,
            ref: `refs/tags/v${process.env.TAG_NAME}`,
            sha: context.sha
          })
