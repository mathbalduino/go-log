"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[68],{3905:function(e,t,n){n.d(t,{Zo:function(){return l},kt:function(){return u}});var a=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=a.createContext({}),d=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},l=function(e){var t=d(e.components);return a.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,r=e.originalType,s=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),m=d(n),u=o,g=m["".concat(s,".").concat(u)]||m[u]||p[u]||r;return n?a.createElement(g,i(i({ref:t},l),{},{components:n})):a.createElement(g,i({ref:t},l))}));function u(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var r=n.length,i=new Array(r);i[0]=m;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c.mdxType="string"==typeof e?e:o,i[1]=c;for(var d=2;d<r;d++)i[d]=n[d];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},1198:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return c},contentTitle:function(){return s},metadata:function(){return d},toc:function(){return l},default:function(){return m}});var a=n(7462),o=n(3366),r=(n(7294),n(3905)),i=["components"],c={sidebar_position:2},s="Log creation",d={unversionedId:"advanced/log_creation",id:"advanced/log_creation",isDocsHomePage:!1,title:"Log creation",description:"Every time a new log is created, it's necessary to alloc a new map to represent it's fields.",source:"@site/docs/advanced/log_creation.md",sourceDirName:"advanced",slug:"/advanced/log_creation",permalink:"/go-log/docs/advanced/log_creation",editUrl:"https://github.com/mathbalduino/go-log/edit/main/docs/docs/advanced/log_creation.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Loggers clonage",permalink:"/go-log/docs/advanced/loggers_clonage"},next:{title:"Dynamic Configuration",permalink:"/go-log/docs/advanced/dynamic_config"}},l=[],p={toc:l};function m(e){var t=e.components,n=(0,o.Z)(e,i);return(0,r.kt)("wrapper",(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"log-creation"},"Log creation"),(0,r.kt)("p",null,"Every time a new log is created, it's necessary to alloc a new map to represent it's fields.\nThis new map will be filled with the ",(0,r.kt)("inlineCode",{parentName:"p"},"Logger")," ",(0,r.kt)("inlineCode",{parentName:"p"},"Base fields"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"PreHooks"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"AdHoc fields")," and\n",(0,r.kt)("inlineCode",{parentName:"p"},"PostHooks")," (The order in which the fields are applied is discussed at\n",(0,r.kt)("a",{parentName:"p",href:"/go-log/docs/basic-concepts/override_order"},"Fields override order"),"). This process can be expensive,\ndepending on the ",(0,r.kt)("inlineCode",{parentName:"p"},"Logger")," size."),(0,r.kt)("div",{className:"admonition admonition-caution alert alert--warning"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"}))),"caution")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"The final ",(0,r.kt)("inlineCode",{parentName:"p"},"LogFields")," will be an entire new map. You can, of course, change the value of some\nof it's keys directly inside the ",(0,r.kt)("inlineCode",{parentName:"p"},"Output")," functions, but it's ",(0,r.kt)("strong",{parentName:"p"},"not recommended"),". The ",(0,r.kt)("inlineCode",{parentName:"p"},"LogFields"),"\nmap is intended to be used as a ",(0,r.kt)("inlineCode",{parentName:"p"},"read-only")," map. "))),(0,r.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"The life time of these maps are very short. They're useless after the last ",(0,r.kt)("inlineCode",{parentName:"p"},"Output")," function\nis finished."))),(0,r.kt)("p",null,"If you need performance and your logs are heavy, you should set the ",(0,r.kt)("inlineCode",{parentName:"p"},"Logger")," to be ",(0,r.kt)("inlineCode",{parentName:"p"},"async"),"\n(see ",(0,r.kt)("a",{parentName:"p",href:"/go-log/docs/basic-concepts/async_logger"},"Async Logger")," for details), and all this process will\nbe performed into a dedicated go routine. Just remember that the ",(0,r.kt)("inlineCode",{parentName:"p"},"PreHooks")," are always executed\nby the same go routine that created the ",(0,r.kt)("inlineCode",{parentName:"p"},"Log"),"."),(0,r.kt)("p",null,"If you want to see details about the implementation, see the\n",(0,r.kt)("a",{parentName:"p",href:"https://github.com/mathbalduino/go-log/blob/79263810d94dd1f2d112727824d1c5256b27951b/logLevels.go#L89"},"Logger.Log source-code"),"\nand ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/mathbalduino/go-log/blob/79263810d94dd1f2d112727824d1c5256b27951b/handleLog.go#L70"},"handleLog source-code"),",\nat the root package. The ",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("em",{parentName:"strong"},"entire process"))," is done inside them."))}m.isMDXComponent=!0}}]);