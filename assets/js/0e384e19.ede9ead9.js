"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[671],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return g}});var o=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,o,a=function(e,t){if(null==e)return{};var n,o,a={},i=Object.keys(e);for(o=0;o<i.length;o++)n=i[o],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(o=0;o<i.length;o++)n=i[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=o.createContext({}),c=function(e){var t=o.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},p=function(e){var t=c(e.components);return o.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},u=o.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),u=c(n),g=a,m=u["".concat(s,".").concat(g)]||u[g]||d[g]||i;return n?o.createElement(m,r(r({ref:t},p),{},{components:n})):o.createElement(m,r({ref:t},p))}));function g(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,r=new Array(i);r[0]=u;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:a,r[1]=l;for(var c=2;c<i;c++)r[c]=n[c];return o.createElement.apply(null,r)}return o.createElement.apply(null,n)}u.displayName="MDXCreateElement"},9881:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return l},contentTitle:function(){return s},metadata:function(){return c},toc:function(){return p},default:function(){return u}});var o=n(7462),a=n(3366),i=(n(7294),n(3905)),r=["components"],l={sidebar_position:1},s="Introduction",c={unversionedId:"intro",id:"intro",isDocsHomePage:!1,title:"Introduction",description:"go-log is an opinionated, modularized, structured and production-ready GO logging library.",source:"@site/docs/intro.md",sourceDirName:".",slug:"/intro",permalink:"/go-log/docs/intro",editUrl:"https://github.com/mathbalduino/go-log/edit/main/docs/docs/intro.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",next:{title:"Log fields",permalink:"/go-log/docs/basic-concepts/log_fields"}},p=[{value:"Getting Started",id:"getting-started",children:[]},{value:"Basic concepts",id:"basic-concepts",children:[{value:"Log fields",id:"log-fields",children:[]},{value:"Hooks",id:"hooks",children:[]},{value:"Log life cycle",id:"log-life-cycle",children:[]},{value:"Outputs",id:"outputs",children:[]}]},{value:"Extras",id:"extras",children:[{value:"Sync vs Async",id:"sync-vs-async",children:[]},{value:"Advanced customization",id:"advanced-customization",children:[]}]}],d={toc:p};function u(e){var t=e.components,n=(0,a.Z)(e,r);return(0,i.kt)("wrapper",(0,o.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"introduction"},"Introduction"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"go-log")," is an opinionated, modularized, structured and production-ready GO logging library. "),(0,i.kt)("p",null,"It was created, at first, to be used in ",(0,i.kt)("inlineCode",{parentName:"p"},"webservers")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"CLI")," tools. ",(0,i.kt)("del",{parentName:"p"},"But feel free to explore the possibilities.")),(0,i.kt)("h2",{id:"getting-started"},"Getting Started"),(0,i.kt)("p",null,"You will need to install ",(0,i.kt)("inlineCode",{parentName:"p"},"go-log")," before starting. To do it, execute the following command:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-sh"},"go get github.com/mathbalduino/go-log\n")),(0,i.kt)("p",null,"The library is built around the ",(0,i.kt)("inlineCode",{parentName:"p"},"Logger")," interface type, that contains all the main methods:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},"// new.go\ntype Logger interface {\n  ...\n}\n")),(0,i.kt)("p",null,"Once you get a ",(0,i.kt)("inlineCode",{parentName:"p"},"Logger")," instance, you're ready to throw ",(0,i.kt)("inlineCode",{parentName:"p"},"logs")," by calling the correspondent methods:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},"// logLevels.go\nfunc Trace(msg string, adHocFields ...LogFields)  { ... }\nfunc Debug(msg string, adHocFields ...LogFields)  { ... }\nfunc Info(msg string, adHocFields ...LogFields)   { ... }\nfunc Warn(msg string, adHocFields ...LogFields)   { ... }\nfunc Error(msg string, adHocFields ...LogFields)  { ... }\nfunc Fatal(msg string, adHocFields ...LogFields)  { ... }\nfunc ErrorFrom(e error, adHocFields ...LogFields) { ... }\nfunc FatalFrom(e error, adHocFields ...LogFields) { ... }\n")),(0,i.kt)("p",null,"As you may have seen, this library contains some builtin ",(0,i.kt)("a",{parentName:"p",href:"/go-log/docs/basic-concepts/log_levels"},"Log levels"),", but you can ",(0,i.kt)("a",{parentName:"p",href:"/go-log/docs/basic-concepts/log_levels#extending-the-log-levels"},"customize it"),"."),(0,i.kt)("p",null,"To ",(0,i.kt)("a",{parentName:"p",href:"/go-log/docs/basic-concepts/logger_creation"},"create a new Logger")," instance, you have two options:"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"Function ",(0,i.kt)("inlineCode",{parentName:"li"},"New"),", that will create an empty ",(0,i.kt)("inlineCode",{parentName:"li"},"Logger")," instance (takes a ",(0,i.kt)("a",{parentName:"li",href:"/go-log/docs/basic-concepts/configuration"},"Configuration")," struct as argument)"),(0,i.kt)("li",{parentName:"ol"},"Function ",(0,i.kt)("inlineCode",{parentName:"li"},"NewDefault"),", that will create a ",(0,i.kt)("inlineCode",{parentName:"li"},"Logger")," instance with the ",(0,i.kt)("a",{parentName:"li",href:"/go-log/docs/basic-concepts/configuration#default-configuration"},"Default configuration"))),(0,i.kt)("h2",{id:"basic-concepts"},"Basic concepts"),(0,i.kt)("p",null,"To understand this library, you'll have to understand 4 different concepts: "),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("a",{parentName:"li",href:"#log-fields"},"Log fields")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("a",{parentName:"li",href:"#hooks"},"Hooks")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("a",{parentName:"li",href:"#log-life-cycle"},"Log life cycle")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("a",{parentName:"li",href:"#outputs"},"Outputs"))),(0,i.kt)("h3",{id:"log-fields"},"Log fields"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"Logs")," are represented as a set of fields, just like a JSON object:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "msg": "some log message",\n  "lvl": 10,\n  ...\n  "custom": "field",\n  ...\n}\n')),(0,i.kt)("p",null,"Looking at the GO type definition for log fields, it becomes clear that it's just a ",(0,i.kt)("inlineCode",{parentName:"p"},"map")," from string to anything:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},"// fields.go\n// Just an alias\ntype LogFields = map[string]interface{}\n")),(0,i.kt)("p",null,"Fields can be statically or dynamically added or overrided, so you have freedom to structure your log as you please."),(0,i.kt)("p",null,"You can set log fields in 3 different ways, using:"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("a",{parentName:"li",href:"/go-log/docs/basic-concepts/base_fields"},"Base fields")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("a",{parentName:"li",href:"/go-log/docs/basic-concepts/pre_hooks"},"PreHooks")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("a",{parentName:"li",href:"/go-log/docs/basic-concepts/adhoc_fields"},"Ad hoc fields")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("a",{parentName:"li",href:"/go-log/docs/basic-concepts/post_hooks"},"PostHooks"))),(0,i.kt)("h3",{id:"hooks"},"Hooks"),(0,i.kt)("p",null,"Hooks are used to define dynamic fields. They're divided in two categories:"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("a",{parentName:"li",href:"/go-log/docs/basic-concepts/pre_hooks"},"PreHooks")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("a",{parentName:"li",href:"/go-log/docs/basic-concepts/post_hooks"},"PostHooks"))),(0,i.kt)("p",null,"A set of ",(0,i.kt)("inlineCode",{parentName:"p"},"Hooks")," is defined as a map from field name to a function that evaluates to the field value:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},"// hooks.go\n// Just an alias\ntype Hooks = map[string]func(Log) interface{}\n")),(0,i.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"note")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},(0,i.kt)("inlineCode",{parentName:"p"},"Hooks")," are intended to be used to calculate the value of non-constant fields, just like the log timestamp, for example"))),(0,i.kt)("h3",{id:"log-life-cycle"},"Log life cycle"),(0,i.kt)("p",null,"Every created log will go through four different phases, sending the final log fields to the configured outputs:"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("a",{parentName:"li",href:"/go-log/docs/basic-concepts/life_cycle#sync-phase-1-creation"},"Creation")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("a",{parentName:"li",href:"/go-log/docs/basic-concepts/life_cycle#sync-phase-2-pre-handling"},"Pre handling")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("a",{parentName:"li",href:"/go-log/docs/basic-concepts/life_cycle#async-phase-3-post-handling"},"Post handling")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("a",{parentName:"li",href:"/go-log/docs/basic-concepts/life_cycle#async-phase-4-output"},"Output"))),(0,i.kt)("p",null,"For more details, see the ",(0,i.kt)("a",{parentName:"p",href:"/go-log/docs/basic-concepts/life_cycle"},"Log life cycle")," page."),(0,i.kt)("h3",{id:"outputs"},"Outputs"),(0,i.kt)("p",null,"When some log is created it needs to be sent to somewhere, be it the stdout, some database, or anything. ",(0,i.kt)("inlineCode",{parentName:"p"},"Outputs")," are functions that handle these scenarios, forwarding the created logs to it's final destiny."),(0,i.kt)("p",null,"The library contains some basic ",(0,i.kt)("inlineCode",{parentName:"p"},"Output")," functions already defined, so you can play around with them ",(0,i.kt)("del",{parentName:"p"},"or create your own, from scratch"),"."),(0,i.kt)("p",null,"At the end of the day, ",(0,i.kt)("inlineCode",{parentName:"p"},"outputs")," are just functions that will receive some log fields:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-go"},"// outputs.go\n// Just an alias\ntype Output = func(lvl uint64, msg string, fields LogFields)\n")),(0,i.kt)("p",null,"For more details, see the ",(0,i.kt)("a",{parentName:"p",href:"/go-log/docs/basic-concepts/outputs"},"Outputs")," page."),(0,i.kt)("h2",{id:"extras"},"Extras"),(0,i.kt)("h3",{id:"sync-vs-async"},"Sync vs Async"),(0,i.kt)("p",null,"Logs can be handled in two ways: ",(0,i.kt)("inlineCode",{parentName:"p"},"sync")," or ",(0,i.kt)("inlineCode",{parentName:"p"},"async"),". When set to ",(0,i.kt)("inlineCode",{parentName:"p"},"async"),", the expensive part of the logging operation will run in a different go routine."),(0,i.kt)("p",null,"In order to configure the ",(0,i.kt)("inlineCode",{parentName:"p"},"Logger")," to be ",(0,i.kt)("inlineCode",{parentName:"p"},"async"),", you will need to read more about ",(0,i.kt)("a",{parentName:"p",href:"/go-log/docs/basic-concepts/async_logger"},"Async Loggers"),"."),(0,i.kt)("h3",{id:"advanced-customization"},"Advanced customization"),(0,i.kt)("p",null,"Virtually ",(0,i.kt)("em",{parentName:"p"},"everything")," is customizable. You can change the name of the required fields ",(0,i.kt)("inlineCode",{parentName:"p"},"msg")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"lvl"),", create new log levels, new error parsers, etc."),(0,i.kt)("p",null,"For more details, see the ",(0,i.kt)("a",{parentName:"p",href:"/go-log/docs/basic-concepts/configuration"},"Configuration"),", ",(0,i.kt)("a",{parentName:"p",href:"/go-log/docs/basic-concepts/log_levels"},"Log levels")," and ",(0,i.kt)("a",{parentName:"p",href:"/go-log/docs/basic-concepts/outputs"},"Outputs")," pages."))}u.isMDXComponent=!0}}]);